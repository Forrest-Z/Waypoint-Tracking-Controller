#include <iostream>
#include<fstream>
#include<algorithm>
#include <vector>
#include <sstream>
#include<string>

using namespace std;
#include <ros/ros.h>
#include <geometry_msgs/PoseStamped.h>
#include <nav_msgs/Path.h>


void fakeData(nav_msgs::Path& pth){
	pth.poses.clear();
	float X[110] = {6.81666936581,6.83216821732,6.84142212613,6.85490736759,6.87345909286,6.89559013291,6.91943689257
					,6.9373517061,6.95195374055,6.9641248622,6.97440186346,6.98304579466,6.98894645066,6.98834316968,6.9765590958
					,6.9460364677,6.89322792661,6.82128974654,6.73317122888,6.63134786392,6.51796518135,6.44908077289,6.37441005235
					,6.2944387639,6.20919439409,6.11828048726,6.02289240615,5.92307023258,5.81850453365,5.70984763149,5.59908930169
					,5.48744278876,5.37532658713,5.26445130309,5.15484001015,5.04652580186,4.94001050577,4.83500651445,4.73245783906
					,4.63194900902,4.53274848951,4.43398509643,4.33531097816,4.2383009119,4.14075649612,4.04329177578,3.94666413881
					,3.85136538944,3.75739384548,3.66454676112,3.57666399438,3.49431708821,3.41753321368,3.34587075512,3.27961347488
					,3.2190082698,3.16422395105,3.1160471666,3.07434151113,3.04015195472,3.0132737617,2.99378495904,2.98427006411
					,2.98554206345,2.99721431155,3.01898919202,3.05184183779,3.09411281777,3.14567574244,3.20631383553,3.27593256839
					,3.3523887565,3.43540715949,3.52343701279,3.61334077787,3.70702773338,3.80461648157,3.90421706296,4.00517781724
					,4.10602914886,4.20678628249,4.30748134756,4.40887982518,4.51070767656,4.61088101531,4.71084528137,4.81005656074
					,4.90792380686,5.00356340931,5.10694141914,5.22008689771,5.34514639407,5.48523836787,5.64038958165,5.80926032738,5.99094779905
					,6.17304015237,6.34935457334,6.51697430973,6.6742908234,6.81677125699,6.93265498361,7.03039462107,7.09142102532
					,7.12339359931,7.12839156131,7.10282969575,7.04905933282,6.96419707627};
   float Y[110] = {8.06958969993,7.84459501156,7.63311954183,7.41672172601,7.20149448095,6.98312032241,6.7625382005
									,6.54343522096,6.32126936455,6.10055591338,5.86317954661,5.60919284213,5.36217880477,5.11932194448
									,4.8802054255,4.64399483032,4.41550227663,4.20428065914,4.01647671807,3.85218635651,3.71082544569
									,3.54227695513,3.38280153363,3.2311502619,3.08782450855,2.95384213095,2.83063261279,2.71733019204
									,2.61428040888,2.52239705718,2.44081197424,2.37027917564,2.31025435835,2.26109237436,2.22185073856
									,2.19330545948,2.17592914347,2.16918568909,2.17298769628,2.18735845703,2.21217037762
									,2.25650933715,2.31266646455,2.37901118052,2.45574075438,2.5435754911,2.64176379724,2.750502955
									,2.87003149143,2.99964976447,3.13980933665,3.29043810987,3.45032217014,3.61874740801,3.79473858221
									,3.97634916484,4.16332092078,4.35489680415,4.55063722695,4.75092190489,4.95519343829,5.16167730099,5.36861491605
									,5.57539658108,5.78166921157,5.98652769314,6.1877430046,6.38433208692,6.57552250264,6.76050528793
									,6.93867840755,7.11024858939,7.27539471482,7.43493246895,7.58375705575,7.72326632922,7.85254997708
									,7.97147662846,8.08045321012,8.17904787032,8.26640522502,8.34335870011,8.40960628742,8.46552618603
									,8.51064386415,8.54487276927,8.56850736149,8.58149366941,8.58367977097,8.67722016879,8.75814546003
									,8.82408472595,8.87100137689,8.89557344281,8.89310752626,8.8574285797,8.78931934848,8.69227218113
									,8.56980345693,8.42508092995,8.25884290604,8.05979152607,7.8481312259,7.63251477105,7.41139257576
									,7.19066771779,6.96953191668,6.74840155351,6.5220976806};
   // float Y[20];
   // for (int j = 0;j<20;j++)
   // {
   //     Y[j] = 25;
   //     //std::cout<<Y[j]<<std::endl;
   // }
   int N = sizeof(X)/sizeof(X[0]);
	for(int i = 0;i < N;i++)
	{
		geometry_msgs::PoseStamped pt;
		pt.pose.position.x = X[i];
		pt.pose.position.y = Y[i];

		pth.poses.push_back(pt);
	}
};

int main(int argc, char** argv){
	ros::init(argc, argv, "FakePathPublisher");
	ros::NodeHandle nh;
	ros::Rate loop_rate(100);

	ros::Publisher pub_fakePath = nh.advertise<nav_msgs::Path>("/Trajectory",10);
	
	nav_msgs::Path pth;
	while(ros::ok()){
		ros::spinOnce();
		fakeData(pth);
		pub_fakePath.publish(pth);

		loop_rate.sleep();
	}
}
